{"version":3,"sources":["logo.svg","API.js","components/search.js","components/results.js","components/details.js","components/footer.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API","getBooks","title","author","apiUrl","trim","replace","console","log","axios","get","saveBook","bookData","post","getSavedBooks","removeBook","id","delete","Search","state","handleInput","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleSearch","preventDefault","then","res","data","items","props","updateBooks","updateStatus","handleMyBooks","map","x","item","react_default","a","createElement","type","onClick","this","placeholder","onChange","Component","xxx","handleDetails","ind","getAttribute","updateDetails","_this2","onBookShelf","bookList","length","key","toString","volumeInfo","handleSave","self","assertThisInitialized","isSaved","bookInfo","alert","removeBookInfo","savedBooks","push","updateSavedBooks","handleRemove","newArray","filter","book","reduce","b","subTitle","description","src","imageLinks","thumbnail","alt","Footer","books","App","bookshelf","newBooks","className","search","results","details","footer","updateApp","stateApp","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7bbf3f57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import axios from \"axios\";\n\n// https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes\n\nvar gBookUrl = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\nexport default {\n  // Gets all books\n  getBooks: function(title, author) {\n    title = title.trim().replace(\" \", \"%20\");\n    author = author.trim().replace(\" \", \"%20\");  \n    let apiUrl = gBookUrl+title+ (author? \"+inauthor:\"+author: \"\" ) + \"&maxResults=40\"; \n    console.log(apiUrl);\n    return axios.get(apiUrl);\n  },\n  saveBook: function(bookData) {\n      return axios.post(\"/api/books\", bookData);\n  },\n  getSavedBooks: function() {\n      return axios.get(\"/api/books\")\n  },\n  removeBook: function(id) {\n    return axios.delete(\"/api/books/\" + id)\n  }\n};  \n//   // Gets the book with the given id\n//   getBook: function(id) {\n//     return axios.get(\"/api/books/\" + id);\n//   },\n//   // Deletes the book with the given id\n//   deleteBook: function(id) {\n//     return axios.delete(\"/api/books/\" + id);\n//   },\n//   // Saves a book to the database\n//   saveBook: function(bookData) {\n//     return axios.post(\"/api/books\", bookData);\n//   }","import React, { Component } from \"react\";\nimport API from \"../API.js\";\n\nclass Search extends Component {\n    state = {\n        title: \"\",\n        author: \"\",\n      };\n    \n    handleInput = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }  \n\n    handleSearch = (event) => {\n        // let self = this;\n        event.preventDefault();\n        API.getBooks(this.state.title, this.state.author).then(res=>{\n            console.log(res.data.items)        \n            // self.setState({books: res.data.items, saved_mode: false})\n            this.props.updateBooks(res.data.items)\n            this.props.updateStatus(false)\n        })\n    }\n\n\n// should handle search here\n    handleMyBooks = (event) => {\n        event.preventDefault();\n        API.getSavedBooks().then(res=>{\n            let items = res.data.map(x=>x.item)\n            console.log(items)\n            this.props.updateBooks(items)\n            this.props.updateStatus(true)\n        })\n\n    }\n\n    render() {\n        return(\n            <div id=\"search\">\n                <div id=\"searchGoogle\">\n                <button type=\"button\" onClick={this.handleSearch}>Google Books</button>\n                <input name = \"title\" type=\"text\" placeholder = \"title\"\n                   onChange={this.handleInput}\n                />\n                \n                <input name=\"author\" type=\"text\" placeholder = \"author\"\n                   onChange={this.handleInput}\n                />\n                \n                </div>\n                <div id=\"bookShelf\">\n                <button type=\"button\" onClick={this.handleMyBooks}>My Bookshelf</button>\n                </div>\n            </div>\n        )\n    }\n}  \n\nexport default Search;","import React, { Component } from \"react\";\nimport API from \"../API.js\";\n\nclass xxx extends Component {\n\n    handleDetails = (event) => {\n        event.preventDefault();\n        // const {name, ind} = event.target;\n        let ind = event.target.getAttribute(\"name\")\n        console.log(\"========\", ind)\n        this.props.updateDetails(ind);\n    }\n\n    render() {\n        return(\n            // <div>===== {this.props.bookList.length} =======</div>\n            <div id=\"results\">\n                {this.props.onBookShelf?\n                   <h2> {this.props.bookList.length} books in my bookshelf</h2> :\n                   <h2> {this.props.bookList.length} books found in Google Books Search  </h2>\n                } \n            \n                    {this.props.bookList.map((x, ind)=> (<div key={ind.toString()}>\n                        <button name={ind.toString()} onClick={this.handleDetails}>details</button>\n\n                        {/* <img src=\n                            {x.volumeInfo.imageLinks.smallThumbnail? x.volumeInfo.imageLinks.smallThumbnail: \"\"}\n                             alt=\"\"/> */}\n\n  \n                        {x.volumeInfo.title} \n                        {/* {x.volumeInfo.subtitle} */}\n                        {/* author: {x.volumeInfo.authors.map((y, indY)=>(\n                            <div key={indY.toString() + x.id}> {y} </div>\n                        ))}  */}\n                            <hr></hr>\n                        </div>                        \n                    ))}\n           </div>\n        )    \n   }\n}\n\nexport default xxx;","import React, { Component } from \"react\";\nimport API from \"../API.js\";\n\nclass xxx extends Component {\n   // is book in savedBook ?  \n    isSaved (book) {    \n       if (!this.props.savedBooks) {\n           return false;\n       } else {    \n        //    return (this.props.savedBooks.reduce( (a,b)=> (a.id===thisId) || (b.id===thisId)))    \n              return (this.props.savedBooks.map(x=>x.id===book.id)).reduce((a,b)=>a||b)\n        }\n    }\n    \n    \n    handleSave = (event) => {\n        event.preventDefault();\n        let self = this;\n        if ( this.isSaved(this.props.bookInfo)) {\n           alert(\"NO SAEV\")             \n        }  else {\n            API.saveBook(this.props.bookInfo).then(function(res){\n                self.props.removeBookInfo();\n                self.props.savedBooks.push(self.props.bookInfo)\n                self.props.updateSavedBooks(self.props.savedBooks)\n               })\n        }\n    }\n\n    handleRemove = (event) => {\n        event.preventDefault();\n        let self = this;\n       API.removeBook(this.props.bookInfo.id).then(function(res){\n              self.props.removeBookInfo();\n              let newArray = self.props.savedBooks.filter(x=> x.id !== self.props.bookInfo.id )\n              self.props.updateSavedBooks(newArray)\n           console.log(res.data);\n       })\n    }\n\n    render() {\n        return(\n        <div id=\"details\">\n            {!this.props.bookInfo.id ? <span>No Data</span> : \n            <div>\n                <h2>{this.props.bookInfo.volumeInfo.title}</h2>\n                <h3>{this.props.bookInfo.volumeInfo.subTitle}</h3> \n                <div>{ \n                this.isSaved(this.props.bookInfo)? \n                <div><h3>Already in my bookshelf </h3>\n                    <button onClick={this.handleRemove}>Remove from my bookshelf</button>\n                </div> : \n                <div><h3>New </h3>\n                    <button onClick={this.handleSave}>Save to my bookshelf</button>\n                </div> \n                }</div>\n\n                {/*               \n                {this.props.onBookShelf?\n                <button onClick={this.handleRemove}>Remove from my bookshelf</button> :\n                <button onClick={this.handleSave}>Save to my bookshelf</button>\n                } */}\n\n                ({this.props.bookInfo.id})\n                <p>{this.props.bookInfo.volumeInfo.description}</p>\n                <img src = {this.props.bookInfo.volumeInfo.imageLinks.thumbnail} alt=\"\"/>              \n            </div>\n            }     \n         </div>\n        )    \n      }\n\n}   \n\nexport default xxx;","import React, { Component } from \"react\";\nimport API from \"../API.js\";\n\nclass Footer extends Component {\n    state = {\n        books: []\n    }\n\n    render() {\n        return(\n            <div></div>\n        )    \n   }\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport Search from \"./components/search.js\";\nimport Results from \"./components/results.js\";\nimport Details from \"./components/details.js\";\nimport Footer from \"./components/footer.js\";\nimport API from \"./API.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  \n  state = {\n    savedBooks: [],\n    books: [],\n    bookInfo: {},\n    onBookShelf: true\n  }\n\n  componentDidMount() {\n    API.getSavedBooks().then(res=>{\n      let savedBooks = res.data.map(x=>x.item);\n      this.setState( {savedBooks: savedBooks, books: savedBooks})    \n    })\n  }\n\n  updateBooks = (books) => {\n    console.log(books)\n    this.setState({books: books})\n    console.log(\"=======+++++ \", this.state.books)\n  }\n\n  updateDetails = (ind) => {\n    console.log(\"=====Index=====\",  ind)\n    this.setState({bookInfo: this.state.books[ind]});\n  }\n\n  updateStatus = (bookshelf) => {\n    this.setState({onBookShelf: bookshelf})\n  }\n\n  removeBookInfo = () => {\n    console.log(\"//////////// > \", this.state.bookInfo)\n    let newBooks = this.state.books.filter(x=> x.id !== this.state.bookInfo.id) \n    if (this.state.onBookShelf) {\n       this.setState({bookInfo: {}})\n    }\n    this.setState({books: newBooks})\n  }\n\n  updateSavedBooks = (newArray) => {\n    this.setState({savedBooks: newArray})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n    \n        <div className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h2>Welcome to Google Book Search</h2>\n        </div>\n        {/* <p className=\"App-intro\">\n          To get started, edit <code>src/App.js</code> and save to reload.\n        </p> */}\n       \n        <Search \n            updateBooks =  {this.updateBooks} \n            updateStatus = {this.updateStatus}\n            updateSavedBooks = {this.updateSavedBooks}\n\n        />\n        <Results \n            bookList = {this.state.books} \n            updateDetails = {this.updateDetails} \n            onBookShelf = {this.state.onBookShelf}  \n        />\n        <Details \n            bookInfo = {this.state.bookInfo} \n            onBookShelf = {this.state.onBookShelf}\n            savedBooks = {this.state.savedBooks}\n            updateSavedBooks = {this.updateSavedBooks}\n            removeBookInfo =  {this.removeBookInfo}     \n        />\n        <Footer updateApp={this.setState} stateApp = {this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}